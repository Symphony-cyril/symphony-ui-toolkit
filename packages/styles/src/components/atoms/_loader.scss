@mixin text {
  color: $--tk-main-text-color;
  font-family: 'Segoe UI';
  font-style: normal;
  font-weight: 400;
  font-size: toRem(12);
  line-height: toRem(16);
  margin: 0;
  overflow-wrap: break-word;
  max-width: toRem(200);
}

@mixin spinner {
  font-family: 'tk-icons';
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1em;
  vertical-align: top;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@mixin radialProgress {
  position: relative;
  display: inline-block;
  text-align: center;
  svg {
    transform: rotate(270deg);
    width: 5em;
    height: 5em;
  }
  circle {
    stroke-width: 0.47em;
    fill: transparent;
    transform: translate(10%, 10%);
    .radial-progress-center {
      fill: none;
    }
    .radial-progress-background {
      stroke: getColor($electricity, '50');
    }
    .radial-fill {
      position: absolute;
      transform: translate(-50%, -50%);
    }
  }
}

.tk-loader {
  //loader
  &--warning {
    color: $--tk-color-error !important;
  }

  &--ok {
    color: $scolor-green !important;
  }

  &--attention {
    color: $scolor-orange !important;
  }

  &--primary {
    color: $scolor-electricity !important;
  }

  &--default {
    color: $--tk-loader-default !important;
  }

  &--small {
    font-size: toRem(12);
  }

  &--medium {
    font-size: toRem(16);
  }

  &--large {
    font-size: toRem(32);
  }

  &-spinner {
    @extend .animate-spin;
    @include spinner;

    &::before {
      @include tk-icon-loading;
    }
  }

  //LoaderBeta
  &-warning {
    stroke: $--tk-color-error !important;
  }

  &-ok {
    stroke: $scolor-green !important;
  }

  &-attention {
    stroke: $scolor-orange !important;
  }

  &-primary {
    stroke: $scolor-electricity !important;
  }

  &-default {
    stroke: $--tk-loader-default !important;
  }

  &-small {
    font-size: toRem(12) / 3;
  }

  &-medium {
    font-size: toRem(16) / 3;
  }

  &-large {
    font-size: toRem(32) / 3;
  }

  &-container {
    display: flex;
  }

  &--spinner {
    &-determinate {
      @include radialProgress;
      .radial-progress-cover {
        stroke: #cdcfd4;
        stroke-width: 0.501em;
      }
    }
    &-indeterminate {
      @include radialProgress;
      .radial-progress-cover {
        stroke: #cdcfd4;
        stroke-width: 0.501em;
        animation: stroke 1s infinite;
        svg {
          transform: rotate(-90deg);
        }
      }
    }
    &-small {
      font-size: toRem(12) / 3;
      &--vertical-text {
        @include text;
        text-align: center;
      }
      &--horizontal-text {
        @include text;
        text-align: left;
        transform: translate(10%, 10%);
      }
    }

    &-medium {
      font-size: toRem(16) / 3;
      &--vertical-text {
        @include text;
        text-align: center;
      }
      &--horizontal-text {
        @include text;
        text-align: left;
        transform: translate(10%, 20%);
      }
    }

    &-large {
      font-size: toRem(32) / 3;
      &--vertical-text {
        @include text;
        text-align: center;
      }
      &--horizontal-text {
        @include text;
        text-align: left;
        transform: translate(10%, 35%);
      }
    }

    &--vertical {
      display: inline-block;
    }
    &--horizontal {
      display: flex;
    }
  }

  &--linear {
    &-container {
      width: 200px;
      border-radius: toRem(4);
      background-color: getColor($graphite, '20');
      overflow: hidden;
      height: toRem(4);
    }
    &-text {
      @include text;
      text-align: center;
    }
    &-determinate {
      background-color: getColor($electricity, '50');
      text-align: center;
      height: toRem(4);
      border-radius: toRem(4);
      margin: 0 !important;
    }
    &-indeterminate {
      width: 100%;
      height: toRem(4);
      border-radius: toRem(4);
      background-color: getColor($electricity, '50');
      animation: indeterminateAnimation 1s infinite linear;
      transform-origin: 0% 50%;
      margin: 0 !important;
    }
  }
}

@keyframes indeterminateAnimation {
  0% {
    transform: translateX(0) scaleX(0);
  }
  40% {
    transform: translateX(0) scaleX(0.4);
  }
  100% {
    transform: translateX(100%) scaleX(0.5);
  }
}

@keyframes stroke {
  from {
    stroke-dashoffset: 0em;
  }
  to {
    stroke-dashoffset: -9.42477796076938em;
  }
}
